install.packages('neuralnet')
install.packages('aod')
library(tidymodels)
library(neuralnet)
library(readr)
library(aod)
library(ggplot2)

# Load the data
RBnflData <- read.csv("https://raw.githubusercontent.com/JordanNewton22/490/main/LyonsNewtonProject.csv")

summary(RBnflData)
RB_Data = RBnflData[2:5]

sapply(RB_Data, sd)
xtabs(~Yearly.Salary + Injured, data = RB_Data)
RB_Data$Injured <- factor(RB_Data$Injured)
mylogit <- glm(Injured ~ Yearly.Salary + YDS + TD, data = RB_Data, family = "binomial")
summary(mylogit)

# # Separate the data into training and testing sets
# set.seed(123)
# train_index <- sample(1:nrow(RB_Data), size = 0.8, replace = FALSE)
# train_data <- RB_Data[train_index, ]
# test_data <- RB_Data[-train_index, ]

# # Create the neural network
# model <- neuralnet(Injured ~ Yearly Salary + YDS + TD, data = train_data)
# 
# # Make predictions on the test data
# predictions <- predict(model, newdata = test_data)
# 
# # Evaluate the model
# confusion_matrix <- table(test_data$injured, predictions)
# accuracy <- (confusion_matrix[1,1] + confusion_matrix[2,2]) / nrow(test_data)
# print(accuracy)
# 
# """
